<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blade.manager.system.permission.mapper.JobMapper">
    <!-- ===================================generated code============================================ -->
    <resultMap id="BaseResultMap" type="com.blade.manager.system.permission.entity.Job">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="modifier" jdbcType="VARCHAR" property="modifier" />
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
        <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
        <result column="dept_id" jdbcType="BIGINT" property="deptId" />
        <result column="job_name" jdbcType="VARCHAR" property="jobName" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
    </resultMap>

    <sql id="table_name">job</sql>
    <sql id="BaseColumn">
        id,
        creator,
        create_time,
        modifier,
        modify_time,
        is_delete,
        dept_id,
        job_name,
        status,
        sort
    </sql>

    <select id="selectByPk" resultMap="BaseResultMap">
        SELECT <include refid="BaseColumn" />
        FROM <include refid="table_name" />
        WHERE id = #{id}
    </select>

    <delete id="deleteByPk">
        DELETE FROM <include refid="table_name" /> WHERE id = #{id}
    </delete>

    <insert id="insert" parameterType="com.blade.manager.system.permission.entity.Job" useGeneratedKeys="false" keyProperty="id">
        <!-- 获取最近一次插入记录的主键值的方式 -->
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT @@IDENTITY
        </selectKey>
        INSERT INTO <include refid="table_name" />
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="creator != null">
                #{creator},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="modifier != null">
                #{modifier},
            </if>
            <if test="modifyTime != null">
                #{modifyTime},
            </if>
            <if test="isDelete != null">
                #{isDelete},
            </if>
            <if test="deptId != null">
                #{deptId},
            </if>
            <if test="jobName != null">
                #{jobName},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="sort != null">
                #{sort},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.blade.manager.system.permission.entity.Job">
        UPDATE <include refid="table_name" />
        <set>
            <if test="creator != null">
                creator = #{creator},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifier != null">
                modifier = #{modifier},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="jobName != null">
                job_name = #{jobName},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="logicallyDeleteByPk">
        UPDATE <include refid="table_name" />
        SET is_delete = 1
    </delete>

    <insert id="insertBatch">
        INSERT INTO <include refid="table_name" />
        (
        creator,
        create_time,
        modifier,
        modify_time,
        is_delete,
        dept_id,
        job_name,
        status,
        sort
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.creator},
            #{item.createTime},
            #{item.modifier},
            #{item.modifyTime},
            #{item.isDelete},
            #{item.deptId},
            #{item.jobName},
            #{item.status},
            #{item.sort}
            )
        </foreach>
    </insert>

    <update id="updateBatch">
        <foreach collection="list" item="item" separator=";">
            UPDATE <include refid="table_name" />
            <set>
                <if test="item.creator != null">
                    creator = #{item.creator},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime},
                </if>
                <if test="item.modifier != null">
                    modifier = #{item.modifier},
                </if>
                <if test="item.modifyTime != null">
                    modify_time = #{item.modifyTime},
                </if>
                <if test="item.isDelete != null">
                    is_delete = #{item.isDelete},
                </if>
                <if test="item.deptId != null">
                    dept_id = #{item.deptId},
                </if>
                <if test="item.jobName != null">
                    job_name = #{item.jobName},
                </if>
                <if test="item.status != null">
                    status = #{item.status},
                </if>
                <if test="item.sort != null">
                    sort = #{item.sort},
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <select id="selectPageList" resultMap="BaseResultMap" parameterType="com.blade.core.model.request.PageSearchDTO">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="table_name" />
        <where>
            1 = 1
            <if test="searchDTO.creator != null">
                AND creator = #{searchDTO.creator}
            </if>
            <if test="searchDTO.createTime != null">
                AND create_time = #{searchDTO.createTime}
            </if>
            <if test="searchDTO.modifier != null">
                AND modifier = #{searchDTO.modifier}
            </if>
            <if test="searchDTO.modifyTime != null">
                AND modify_time = #{searchDTO.modifyTime}
            </if>
            <if test="searchDTO.isDelete != null">
                AND is_delete = #{searchDTO.isDelete}
            </if>
            <if test="searchDTO.deptId != null">
                AND dept_id = #{searchDTO.deptId}
            </if>
            <if test="searchDTO.jobName != null">
                AND job_name = #{searchDTO.jobName}
            </if>
            <if test="searchDTO.status != null">
                AND status = #{searchDTO.status}
            </if>
        </where>
    </select>

    <!-- ===================================generated code============================================ -->

    <resultMap id="jobListMap" type="com.blade.manager.system.permission.model.job.JobListVO">
        <id column="jobId" jdbcType="BIGINT" property="id"/>
        <result column="jobName" jdbcType="VARCHAR" property="jobName"/>
        <result column="jobStatus" jdbcType="TINYINT" property="status"/>
        <result column="jobCreateTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="jobSort" jdbcType="BIGINT" property="sort"/>
        <result column="deptId" jdbcType="BIGINT" property="deptId"/>
        <association property="dept" javaType="com.blade.manager.system.permission.model.dept.DeptVO">
            <id column="deptId" jdbcType="BIGINT" property="id"/>
            <result column="deptName" jdbcType="VARCHAR" property="deptName"/>
            <result column="deptPid" jdbcType="VARCHAR" property="pid"/>
        </association>
    </resultMap>

    <select id="selectPage" resultMap="jobListMap" parameterType="com.blade.core.model.request.PageSearchDTO">
        SELECT job.id AS jobId, job.job_name AS jobName, job.status AS jobStatus, job.create_time AS jobCreateTime,
        job.sort AS jobSort, dept.id AS deptId, dept.dept_name AS deptName, dept.pid AS deptPid
        FROM job job LEFT JOIN dept dept ON job.dept_id = dept.id
        <where>
            job.is_delete = 0
            <if test="searchDTO.startTime != null">
                AND <![CDATA[ job.create_time >= #{searchDTO.startTime} ]]>
            </if>
            <if test="searchDTO.endTime != null">
                AND <![CDATA[ job.create_time <= #{searchDTO.endTime} ]]>
            </if>
            <if test="searchDTO.jobName != null">
                AND job.job_name = #{searchDTO.jobName}
            </if>
            <if test="searchDTO.status != null">
                AND job.status = #{searchDTO.status}
            </if>
        </where>
    </select>

    <select id="jobSelectList" resultMap="jobListMap" parameterType="long">
        SELECT job.id AS jobId, job.job_name AS jobName, job.status AS jobStatus, job.create_time AS jobCreateTime,
        job.sort AS jobSort, dept.id AS deptId, dept.dept_name AS deptName, dept.pid AS deptPid
        FROM job job LEFT JOIN dept dept ON job.dept_id = dept.id
        <where>
            job.is_delete = 0
            <if test="deptId != null">
                AND job.dept_id = #{deptId}
            </if>
        </where>
    </select>

    <select id="getList" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumn"/>
        FROM
        <include refid="table_name" />
        <where>
            is_delete = 0 AND dept_id = 0
        </where>
    </select>
</mapper>
