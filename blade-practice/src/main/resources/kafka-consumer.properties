#kafka consumer的配置，相信的信息可以在 org.apache.kafka.clients.consumer.ConsumerConfig 查到

#用于建立到Kafka集群的初始连接的主机/端口对列表。
#客户端将使用所有服务器，而不管这里为bootstrapping&mdash指定了哪些服务器;
#此列表只影响用于发现完整服务器集的初始主机。
#这个列表的形式应该是<code>host1:port1,host2:port2，…</code>。
#由于这些服务器仅用于初始连接以发现完整的集群成员关系(可能会动态更改)，
# 因此此列表不需要包含完整的服务器集(不过，在服务器关闭时，您可能需要多个服务器)。
bootstrap.servers=192.168.2.106:9092,192.168.2.152:9092,192.168.2.167:9092
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
auto.commit.interval.ms=1000
auto.offset.reset=earliest

#自动检查所使用记录的CRC32。这确保不会发生消息的联机或磁盘损坏。这种检查增加了一些开销，所以在寻求极端性能的情况下可能会禁用它。
check.crcs=true

#当向server发出请求时，这个字符串会发送给server。目的是能够追踪请求源头，以此来允许ip/port许可列表之外的一些应用可以发送信息。
# 这项应用可以设置任意字符串，因为没有任何功能性的目的，除了记录和跟踪。
client.id=bladeDemo
# connections.max.idle.ms=540000

#如果为true，使用者的偏移量将在后台定期提交。
enable.auto.commit=true
# exclude.internal.topics=true
# fetch.max.bytes=52428800
# fetch.max.wait.ms=500
# fetch.min.bytes=1

#标识此使用者所属的使用者组的唯一字符串。如果使用者通过使用<code>subscribe(topic)</code>使用组管理功能，
# 或者使用基于kafka的偏移管理策略，则需要此属性。
group.id=DemoGroup
# heartbeat.interval.ms=3000
# interceptor.classes=null
# internal.leave.group.on.close=true
# isolation.level=read_uncommitted
# max.partition.fetch.bytes=1048576
# max.poll.interval.ms=300000
# max.poll.records=500
# metadata.max.age.ms=300000
# metric.reporters=[]
# metrics.num.samples=2
# metrics.recording.level=INFO
# metrics.sample.window.ms=30000
# partition.assignment.strategy=org.apache.kafka.clients.consumer.RangeAssignor
# receive.buffer.bytes=65536
# reconnect.backoff.max.ms=1000
# reconnect.backoff.ms=50
# request.timeout.ms=305000
# retry.backoff.ms=100
# security.protocol=PLAINTEXT
# send.buffer.bytes=131072
# session.timeout.ms=30000

# 下面是与kafka安全相关的参数
#sasl.jaas.config=null
#sasl.kerberos.kinit.cmd=/usr/bin/kinit
#sasl.kerberos.min.time.before.relogin=60000
#sasl.kerberos.service.name=null
#sasl.kerberos.ticket.renew.jitter=0.05
#sasl.kerberos.ticket.renew.window.factor=0.8
#sasl.mechanism=GSSAPI
#ssl.cipher.suites=null
#ssl.enabled.protocols=[TLSv1.2, TLSv1.1, TLSv1]
#ssl.endpoint.identification.algorithm=null
#ssl.key.password=null
#ssl.keymanager.algorithm=SunX509
#ssl.keystore.location=null
#ssl.keystore.password=null
#ssl.keystore.type=JKS
#ssl.protocol=TLS
#ssl.provider=null
#ssl.secure.random.implementation=null
#ssl.trustmanager.algorithm=PKIX
#ssl.truststore.location=null
#ssl.truststore.password=null
#ssl.truststore.type=JKS